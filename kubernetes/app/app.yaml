# pods/storage/pv-claim.yaml  
kind: PersistentVolume
apiVersion: v1
metadata:
  name: pv-volume-configdb
  labels:
    type: local
spec:
  storageClassName: manual
  capacity:
    storage: 10Mi
  accessModes:
    - ReadWriteOnce
  hostPath:
    path: "/data/configdb"
---
# pods/storage/pv-claim.yaml  
kind: PersistentVolume
apiVersion: v1
metadata:
  name: pv-volume-db
  labels:
    type: local
spec:
  storageClassName: manual
  capacity:
    storage: 1Gi
  accessModes:
    - ReadWriteOnce
  hostPath:
    path: "/data/db"
---
# mongo db claim
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  creationTimestamp: null
  name: mongo-claim-db
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
  storageClassName: db
status: {}
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  creationTimestamp: null
  name: mongo-claim-config
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 1Mi
  storageClassName: config
status: {}
---
# Service for mongo app 
apiVersion: v1
kind: Service
metadata:
  labels:
    app: mongo
  creationTimestamp: null
  name: mongo
spec:
  selector:
    app: mongo
  ports:
  - protocol: TCP
    name: mongo
    port: 27017
    targetPort: 27017
  type: ClusterIP
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: spacelama-api
  name: spacelama-api
spec:
  selector:
    app: spacelama-api
  ports:
  - name: "9000"
    protocol: TCP
    port: 9000
    targetPort: 9000
  type: ClusterIP
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: web
  name: web
spec:
  ports:
  - name: "443"
    port: 443
    targetPort: 4200
  selector:
    app: web
  type: LoadBalancer
status:
  loadBalancer: {}
---
# Deployment of the mongo app 
apiVersion: apps/v1
kind: Deployment
metadata:
  creationTimestamp: null
  name: mongo
spec:
  selector:
    matchLabels:
      app: mongo
  replicas: 1
  strategy:
    type: Recreate
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: mongo
    spec:
      containers:
      - image: mongo:latest
        imagePullPolicy: IfNotPresent
        name: mongo
        ports:
        - containerPort: 27017
        resources: {}
        volumeMounts:
        - mountPath: /data/configdb
          name: mongo-claim-config
        - mountPath: /data/db
          name: mongo-claim-db
      restartPolicy: Always
      volumes:
      - name: mongo-claim-config
        persistentVolumeClaim:
          claimName: mongo-claim-config
      - name: mongo-claim-db
        persistentVolumeClaim:
          claimName: mongo-claim-db
status: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: spacelama-api
spec:
  selector:
    matchLabels:
      app: spacelama-api
  replicas: 2
  strategy: {}
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: spacelama-api
    spec:
      containers:
      - image: spacelama/api:latest
        imagePullPolicy: IfNotPresent
        name: spacelama-api
        ports:
        - containerPort: 9000
        resources: {}
      restartPolicy: Always
status: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: web
spec:
  selector:
    matchLabels:
      app: web
  replicas: 3
  strategy: {}
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: web
    spec:
      containers:
      - image: spacelama/web:latest
        name: spacelama-web
        ports:
        - containerPort: 4200
        resources: {}
      restartPolicy: Always
status: {}
