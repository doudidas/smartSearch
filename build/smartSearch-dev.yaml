apiVersion: v1
kind: Service
metadata:
  labels:
    app: smartSearch
    port: "27017"
    stage: dev
  name: dev-mongo
spec:
  ports:
  - name: mongo
    port: 27017
    protocol: TCP
    targetPort: 27017
  selector:
    app: smartSearch
    stage: dev
    tier: backend
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: smartSearch
    port: "9000"
    stage: dev
  name: dev-spacelama-api
spec:
  ports:
  - name: "9000"
    port: 9000
    protocol: TCP
    targetPort: 9000
  selector:
    app: smartSearch
    stage: dev
    tier: backend
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: smartSearch
    port: "443"
    stage: dev
  name: dev-web
spec:
  externalTrafficPolicy: Cluster
  ports:
  - name: https
    port: 443
    targetPort: 443
  - name: http
    port: 80
    targetPort: 80
  selector:
    app: smartSearch
    stage: dev
    tier: frontend
  type: LoadBalancer
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: smartSearch
    stage: dev
    tier: database
  name: dev-mongo
spec:
  replicas: 1
  selector:
    matchLabels:
      app: smartSearch
      stage: dev
      tier: database
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: smartSearch
        stage: dev
        tier: database
    spec:
      containers:
      - image: mongo:latest
        imagePullPolicy: IfNotPresent
        name: mongo
        ports:
        - containerPort: 27017
        volumeMounts:
        - mountPath: /data/configdb
          name: mongo-configdb
        - mountPath: /data/db
          name: mongo-db
      restartPolicy: Always
      volumes:
      - name: mongo-configdb
        persistentVolumeClaim:
          claimName: dev-mongo-configdb-claim
      - name: mongo-db
        persistentVolumeClaim:
          claimName: dev-mongo-db-claim
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: smartSearch
    stage: dev
    tier: backend
  name: dev-spacelama-api
spec:
  replicas: 2
  selector:
    matchLabels:
      app: smartSearch
      stage: dev
      tier: backend
  template:
    metadata:
      labels:
        app: smartSearch
        stage: dev
        tier: backend
    spec:
      containers:
      - image: spacelama/api-go:dev
        imagePullPolicy: IfNotPresent
        name: spacelama-api
        ports:
        - containerPort: 9000
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: smartSearch
    stage: dev
    tier: frontend
  name: dev-web
spec:
  replicas: 3
  selector:
    matchLabels:
      app: smartSearch
      stage: dev
      tier: frontend
  template:
    metadata:
      labels:
        app: smartSearch
        stage: dev
        tier: frontend
    spec:
      containers:
      - image: spacelama/web:dev
        name: web
      - image: spacelama/web:dev
        name: spacelama-web
        ports:
        - containerPort: 443
      restartPolicy: Always
status: {}
---
apiVersion: v1
kind: PersistentVolume
metadata:
  labels:
    app: smartSearch
    stage: dev
    type: local
  name: dev-mongo-configdb-pv
spec:
  accessModes:
  - ReadWriteOnce
  capacity:
    storage: 10Mi
  hostPath:
    path: /data/docker/mongoDB/configdb
  storageClassName: manual
---
apiVersion: v1
kind: PersistentVolume
metadata:
  labels:
    app: smartSearch
    stage: dev
    type: local
  name: dev-mongo-db-pv
spec:
  accessModes:
  - ReadWriteOnce
  capacity:
    storage: 1Gi
  hostPath:
    path: /data/docker/mongoDB/db
  storageClassName: manual
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  labels:
    app: smartSearch
    stage: dev
    type: Database
  name: dev-mongo-configdb-claim
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 1Mi
  storageClassName: manual
status: {}
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  labels:
    app: smartSearch
    stage: dev
    type: Database
  name: dev-mongo-db-claim
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
  storageClassName: manual
status: {}
